---
- name: 2FAUTH - Create 2fauth container
  community.docker.docker_container:
    name: 2fauth
    image: 2fauth/2fauth:latest
    restart_policy: always
    state: started
    pull: true
    privileged: true
    published_ports:
      - '9019:8000'
    # user: 'root:root'
    # network_mode: host
    networks:
      - name: homelab
    volumes:
      - "{{ docker_dir }}/2fauth/data:/2fauth"
    env:
      APP_NAME: "2FAuth"
      APP_ENV: "local"
      APP_TIMEZONE: "UTC"
      APP_DEBUG: "false"
      SITE_OWNER: "no-reply@domain.tld"
      APP_KEY: "{{ app_key_2fauth }}"
      APP_URL: "https://2fauth.{{ domain_internal }}"
      IS_DEMO_APP: "false"
      LOG_CHANNEL: "daily"
      LOG_LEVEL: "notice"
      DB_DATABASE: "/srv/database/database.sqlite"
      CACHE_DRIVER: "file"
      SESSION_DRIVER: "file"
      MAIL_MAILER: "log"
      MAIL_HOST: "smtp.zoho.com"
      MAIL_PORT: "465"
      MAIL_USERNAME: "{{ smtp_mail }}"
      MAIL_PASSWORD: "{{ smtp_pass_ghost }}"
      MAIL_ENCRYPTION: "null"
      MAIL_FROM_NAME: "No-reply 2FAuth"
      MAIL_FROM_ADDRESS: "{{ smtp_mail }}"
      MAIL_VERIFY_SSL_PEER: "true"
      THROTTLE_API: "60"
      LOGIN_THROTTLE: "5"
      AUTHENTICATION_GUARD: "web-guard"
      AUTHENTICATION_LOG_RETENTION: "14"
      AUTH_PROXY_HEADER_FOR_USER: "null"
      AUTH_PROXY_HEADER_FOR_EMAIL: "null"
      PROXY_LOGOUT_URL: "null"
      WEBAUTHN_NAME: "2FAuth"
      WEBAUTHN_ID: "null"
      WEBAUTHN_USER_VERIFICATION: "preferred"
      TRUSTED_PROXIES: "null"
      PROXY_FOR_OUTGOING_REQUESTS: "null"
      BROADCAST_DRIVER: "log"
      QUEUE_DRIVER: "sync"
      SESSION_LIFETIME: "120"
      REDIS_HOST: "127.0.0.1"
      REDIS_PASSWORD: "null"
      REDIS_PORT: "6379"
      # PUSHER_APP_ID: ""
      # PUSHER_APP_KEY: ""
      # PUSHER_APP_SECRET: ""
      PUSHER_APP_CLUSTER: "mt1"
      # VITE_PUSHER_APP_KEY: "{{ pusher_app_key }}"
      # VITE_PUSHER_APP_CLUSTER: "{{ pusher_app_cluster }}"
      MIX_ENV: "local"

# See https://docs.2fauth.app/getting-started/installation/docker/docker-compose/ for documentation
