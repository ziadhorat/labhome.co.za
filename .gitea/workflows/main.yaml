name: Main
run-name: ${{ gitea.actor }} - Domain.tld
on: [push]

jobs:
  config:
    runs-on: primary
    steps:
      - name: Pre-configure runner
        run: |
          apk add --no-cache nodejs

      - name: Initialize repo
        uses: actions/checkout@v3

      - name: Configure runner
        run: |
          echo -- PACKAGES --
          apk add --no-cache openssh nodejs

          echo
          echo -- KEYS --
          rm -rf ~/.ssh/config
          mkdir -p ~/.ssh/

          echo "$SSH_KEY" > ~/.ssh/services.key
          chmod 600 ~/.ssh/services.key
          cat >>~/.ssh/config <<END
          Host services
            HostName $SSH_HOST_SERVICES
            User $SSH_USER
            IdentityFile ~/.ssh/services.key
            StrictHostKeyChecking no
          END

          echo "$SSH_KEY" > ~/.ssh/dev.key
          chmod 600 ~/.ssh/dev.key
          cat >>~/.ssh/config <<END
          Host dev
            HostName $SSH_HOST_DEV
            User $SSH_USER
            IdentityFile ~/.ssh/dev.key
            StrictHostKeyChecking no
          END

          echo "$SSH_KEY" > ~/.ssh/net.key
          chmod 600 ~/.ssh/net.key
          cat >>~/.ssh/config <<END
          Host net
            HostName $SSH_HOST_NET
            User $SSH_USER
            IdentityFile ~/.ssh/net.key
            StrictHostKeyChecking no
          END

          echo "$SSH_KEY" > ~/.ssh/db.key
          chmod 600 ~/.ssh/db.key
          cat >>~/.ssh/config <<END
          Host db
            HostName $SSH_HOST_DB
            User $SSH_USER
            IdentityFile ~/.ssh/db.key
            StrictHostKeyChecking no
          END

          echo "$SSH_KEY" > ~/.ssh/nas.key
          chmod 600 ~/.ssh/nas.key
          cat >>~/.ssh/config <<END
          Host nas
            HostName $SSH_HOST_NAS
            User $SSH_USER
            IdentityFile ~/.ssh/nas.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST_SERVICES: ${{ secrets.SERVICES_SSH_HOST }}
          SSH_HOST_DEV: ${{ secrets.DEV_SSH_HOST }}
          SSH_HOST_NET: ${{ secrets.NET_SSH_HOST }}
          SSH_HOST_DB: ${{ secrets.DB_SSH_HOST }}
          SSH_HOST_NAS: ${{ secrets.NAS_SSH_HOST }}

      - name: Copy configs
        run: | 
          echo -- HOMEPAGE --
          scp config/homepage/* services:/media/app_data/homepage/config/

          echo
          echo -- FILEGATOR --
          scp config/filegator/* services:/media/app_data/filegator/config/

          echo
          echo -- PROMETHEUS --
          scp config/prometheus/* dev:/media/app_data/prometheus/config/

          echo
          echo -- PROMTAIL --
          scp config/promtail/services/* services:/media/app_data/promtail/config/
          scp config/promtail/dev/* dev:/media/app_data/promtail/config/
          scp config/promtail/net/* net:/media/app_data/promtail/config/
          scp config/promtail/db/* db:/media/app_data/promtail/config/
          scp config/promtail/nas/* nas:/media/nas/data/promtail/config/

  apps:
    runs-on: primary
    steps:
      - name: Initialize repo
        uses: actions/checkout@v3

      - name: Configure runner
        run: |
          echo -- PACKAGES --
          apk add --no-cache ansible

      - name: Deploy [services]
        run: ansible-playbook tasks/services.yml -i group_vars/inventory
        
      - name: Deploy [nas]
        run: ansible-playbook tasks/nas.yml -i group_vars/inventory
        
      - name: Deploy [dev]
        run: ansible-playbook tasks/dev.yml -i group_vars/inventory

      - name: Deploy [net]
        run: ansible-playbook tasks/net.yml -i group_vars/inventory
        
      - name: Deploy [db]
        run: ansible-playbook tasks/db.yml -i group_vars/inventory